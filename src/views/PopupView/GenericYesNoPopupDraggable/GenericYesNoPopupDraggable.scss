@import '../../../settings/Settings';

.GenericYesNoPopupDraggable {
    max-height: 800px;
    max-width: 700px;
 
    // width: 50%;
    border-radius: 5px;
    user-select: none;
    box-shadow: 0px 0px 10px 3px rgba(255, 255, 255, 0.02);

    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    overflow: hidden;

    .Header {
        align-self: stretch;
        height: 40px;
        box-shadow: 0px 2px 15px 0px rgba(0, 0, 0, 0.4);
        color: white;
        font-weight: 900;
        font-size: 18px;
        background-color: $darkThemeFirstColor;

        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: center;
        align-items: center;
        align-content: center;
    }

    .Content {
        align-self: stretch;
        font-size: 14px;
        background-color: $darkThemeSecondColor;
        flex: 1;

        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: center;
        align-items: center;
        align-content: center;
    }

    .Footer {
        padding: 0 40px;
        height: 80px;
        align-self: stretch;
        background-color: $darkThemeSecondColor;
        border-top: solid 1px $darkThemeFirstColor;

        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: flex-end;
        align-items: center;
        align-content: flex-end;

        .TextButton {
     
            box-shadow: $secondaryColor 0 0 0 2px inset; // fallback if new css variables are not supported by browser
            box-shadow: var(--leading-color) 0 0 0 2px inset;
            background-color: $secondaryColor; // fallback if new css variables are not supported by browser
            background-color: var(--leading-color);
            color: white; // fallback if new css variables are not supported by browser
            color: var(--button-text-color);

            &:hover {
                background-color: transparent;
                color: $secondaryColor; // fallback if new css variables are not supported by browser
                color: var(--leading-color);
            }

            &.disabled {
                box-shadow: $darkThemeThirdColor 0 0 0 2px inset;
                background-color: $darkThemeThirdColor;
                cursor: default;
                opacity: 0.6;

                &:hover {
                    box-shadow: $darkThemeThirdColor 0 0 0 2px inset;
                    background-color: $darkThemeThirdColor;
                    color: white;
                }
            }
        }
    }
}

.flexible-modal {
    position: absolute;
    z-index: 1;
    border: 1px solid #ccc;
    background: white;
}
.flexible-modal-mask {
    position: fixed;
    height: 100%;
    background: rgba(0, 0, 0, 0) !important;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
.flexible-modal-resizer {
    position: absolute;
    right: 0;
    bottom: 0;
    cursor: se-resize;
    margin: 5px;
    border-bottom: solid 2px #333;
    border-right: solid 2px #333;
}
.flexible-modal-drag-area {
    background: rgba(255, 0, 0, 0) !important;
    height: 30px;
    position: absolute;
    right: 0;
    top: 0;
    cursor: move;
}
.flexible-modal-drag-area-left {
    background: rgba(255, 0, 0, 0);
    height: 30px;
    position: absolute;
    right: 0;
    top: 0;
    cursor: move;
}
.flexible-modal-drag-area-right {
    background: rgba(255, 0, 0, 0);
    height: 30px;
    position: absolute;
    right: 0;
    top: 0;
    cursor: move;
}

.text-success{
  color: $lightSuccess;
}

.text-fail{
  color: $dangerColor;
}